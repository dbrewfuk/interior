{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","assets/javascript/main.js","assets/javascript/add-listener.js","assets/javascript/analytics.js","assets/javascript/link-clicked.js","assets/javascript/parse-url.js","assets/javascript/supports.js"],"names":[],"mappingszkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar analytics = require('./analytics');\nvar supports = require('./supports');\n\n\n// Add an `is-legacy` class on browsers that don't supports flexbox.\nif (!supports.flexbox()) {\n    var div = document.createElement('div');\n    div.className = 'Error';\n    div.innerHTML = 'Your browser does not support Flexbox. ' +\n        'Parts of this site may not appear as expected.';\n\n    document.body.insertBefore(div, document.body.firstChild);\n}\n\n\n// Track various interations with Google Analytics\nanalytics.track();\n\n\n/**\n * Plugin: jquery.zRSSFeed\n * \n * Version: 1.2.0\n * (c) Copyright 2010-2013, Zazar Ltd\n * \n * Description: jQuery plugin for display of RSS feeds via Google Feed API\n *              (Based on original plugin jGFeed by jQuery HowTo. Filesize function by Cary Dunn.)\n * \n * History:\n * 1.2.0 - Added month names to date formats\n * 1.1.9 - New dateformat option to allow feed date formatting\n * 1.1.8 - Added historical option to enable scoring in the Google Feed API\n * 1.1.7 - Added feed offset, link redirect & link content options\n * 1.1.6 - Added sort options\n * 1.1.5 - Target option now applies to all feed links\n * 1.1.4 - Added option to hide media and now compressed with Google Closure\n * 1.1.3 - Check for valid published date\n * 1.1.2 - Added user callback function due to issue with ajaxStop after jQuery 1.4.2\n * 1.1.1 - Correction to null xml entries and support for media with jQuery < 1.5\n * 1.1.0 - Added support for media in enclosure tags\n * 1.0.3 - Added feed link target\n * 1.0.2 - Fixed issue with GET parameters (Seb Dangerfield) and SSL option\n * 1.0.1 - Corrected issue with multiple instances\n *\n **/\n\n(function($) {\n\n    $.fn.rssfeed = function(url, options, fn) {\n\n        // Set plugin defaults\n        var defaults = {\n            limit: 10,\n            offset: 1,\n            header: true,\n            titletag: 'h3 class=\"article__headline\"',\n            date: true,\n            dateformat: 'MMMM <span>dd</span>',\n            content: true,\n            snippet: true,\n            showerror: true,\n            errormsg: '',\n            key: null,\n            ssl: false,\n            linktarget: '_self',\n            linkredirect: '',\n            linkcontent: false,\n            sort: '',\n            sortasc: true,\n            historical: false,\n            images: true\n        };\n        var options = $.extend(defaults, options);\n\n        // Functions\n        return this.each(function(i, e) {\n            var $e = $(e);\n            var s = '';\n\n            // Check for SSL protocol\n            if (options.ssl) s = 's';\n\n            // Add feed class to user div\n            if (!$e.hasClass('rssFeed')) $e.addClass('rssFeed');\n\n            // Check for valid url\n            if (url == null) return false;\n\n            // Add start offset to feed length\n            if (options.offset > 0) options.offset -= 1;\n            options.limit += options.offset;\n\n            // Create Google Feed API address\n            var api = \"http\" + s + \"://ajax.googleapis.com/ajax/services/feed/load?v=1.0&callback=?&q=\" + encodeURIComponent(url);\n            api += \"&num=\" + options.limit;\n            if (options.historical) api += \"&scoring=h\";\n            if (options.key != null) api += \"&key=\" + options.key;\n            api += \"&output=json_xml\"\n\n            // Send request\n            $.getJSON(api, function(data) {\n\n                // Check for error\n                if (data.responseStatus == 200) {\n\n                    // Process the feeds\n                    _process(e, data.responseData, options);\n\n                    // Optional user callback function\n                    if ($.isFunction(fn)) fn.call(this, $e);\n\n                } else {\n\n                    // Handle error if required\n                    if (options.showerror)\n                        if (options.errormsg != '') {\n                            var msg = options.errormsg;\n                        } else {\n                            var msg = data.responseDetails;\n                        };\n                    $(e).html('<div class=\"rssError\"><p>' + msg + '</p></div>');\n                };\n            });\n        });\n    };\n\n    // Function to create HTML result\n    var _process = function(e, data, options) {\n\n        // Get JSON feed data\n        var feeds = data.feed;\n        if (!feeds) {\n            return false;\n        }\n        var rowArray = [];\n        var rowIndex = 0;\n        var html = '';\n        var row = 'odd';\n\n        // Get XML data for media (parseXML not used as requires 1.5+)\n        if (options.images) {\n            var xml = _getXMLDocument(data.xmlString);\n            var xmlEntries = xml.getElementsByTagName('entry');\n        }\n\n        // Add header if required\n        if (options.header)\n            html += '<div class=\"feed__header rssHeader\"><h2 class=\"feed__title\">Latest News</h2>' +\n            '<a class=\"header__feed-link href=\"' + feeds.link + '\" title=\"' + feeds.description + '\">Read more news at ' + feeds.title + '</a>' +\n            '</div>';\n\n        // Add body\n        html += '<div class=\"rssBody\">' +\n            '<ul class=\"article-list\">';\n\n\n        // Add feeds\n        for (var i = options.offset; i < feeds.entries.length; i++) {\n\n            rowIndex = i - options.offset;\n            rowArray[rowIndex] = [];\n\n            // Get individual feed\n            var entry = feeds.entries[i];\n            var pubDate;\n            var sort = '';\n            var feedLink = entry.link;\n\n            // Apply sort column\n            switch (options.sort) {\n                case 'title':\n                    sort = entry.title;\n                    break;\n                case 'date':\n                    sort = entry.publishedDate;\n                    break;\n            }\n            rowArray[rowIndex]['sort'] = sort;\n\n            // Format published date\n            if (entry.publishedDate) {\n\n                var entryDate = new Date(entry.publishedDate);\n                var pubDate = entryDate.toLocaleDateString() + ' ' + entryDate.toLocaleTimeString();\n\n                switch (options.dateformat) {\n                    case 'datetime':\n                        break;\n                    case 'date':\n                        pubDate = entryDate.toLocaleDateString();\n                        break;\n                    case 'time':\n                        pubDate = entryDate.toLocaleTimeString();\n                        break;\n                    case 'timeline':\n                        pubDate = _getLapsedTime(entryDate);\n                        break;\n                    default:\n                        pubDate = _formatDate(entryDate, options.dateformat);\n                        break;\n                }\n            }\n\n            // Add feed row\n            if (options.linkredirect) feedLink = encodeURIComponent(feedLink);\n\n            //Start with date\n            if (options.date && pubDate) rowArray[rowIndex]['html'] = '<a class=\"article__link-mask\" href=\"' + options.linkredirect + feedLink + '\"></a><div class=\"article__meta-content\">' + pubDate + '</div>'\n            \t   rowArray[rowIndex]['html'] += '<' + options.titletag + '><a href=\"' + options.linkredirect + feedLink + '\" title=\"View this feed at ' + feeds.title + '\">' + entry.title + '</a></' + options.titletag + '>'\n                   // Add any media\n            if (options.images && xmlEntries.length > 0) {\n\n                var xmlContent = entry.content;\n                var xmlMedia = $(xmlContent).find('img').eq(0);\n\n                if (xmlMedia.length > 0) {\n\n\n\n                    for (var m = 0; m < xmlMedia.length; m++) {\n      \n                    \t\n\n                        var xmlUrl = xmlMedia[m].getAttribute(\"src\");\n                        var xmlType = xmlMedia[m].getAttribute(\"type\");\n                        var xmlSize = xmlMedia[m].getAttribute(\"length\");\n                        rowArray[rowIndex]['html'] += '<div class=\"article__image-wrapper\"><div class=\"article__image-inner\"><div class=\"article__image\" style=\"background-image:url(\\'' + xmlUrl + '\\');\"></div></div></div>';\n                    }\n\n                }\n            }\n            \n\n            \n            if (options.content) {\n\n                // Use feed snippet if available and optioned\n                if (options.snippet && entry.contentSnippet != '') {\n                    var content = entry.contentSnippet;\n\n                } else {\n                    var content = entry.content;\n                }\n\n                if (options.linkcontent) {\n                    content = '<a href=\"' + options.linkredirect + feedLink + '\" title=\"View this feed at ' + feeds.title + '\">' + content + '</a>'\n                }\n\n             \n\n                rowArray[rowIndex]['html'] += '<p>' + content + '</p>'\n            }\n\n            \n\n\n\n        }\n\n        // Sort if required\n        if (options.sort) {\n            rowArray.sort(function(a, b) {\n\n                // Apply sort direction\n                if (options.sortasc) {\n                    var c = a['sort'];\n                    var d = b['sort'];\n                } else {\n                    var c = b['sort'];\n                    var d = a['sort'];\n                }\n\n                if (options.sort == 'date') {\n                    return new Date(c) - new Date(d);\n                } else {\n                    c = c.toLowerCase();\n                    d = d.toLowerCase();\n                    return (c < d) ? -1 : (c > d) ? 1 : 0;\n                }\n            });\n        }\n\n        // Add rows to output\n        $.each(rowArray, function(e) {\n\n            html += '<li class=\"article--snippet rssRow ' + row + '\">' + rowArray[e]['html'] + '</li>';\n\n            // Alternate row classes\n            if (row == 'odd') {\n                row = 'even';\n            } else {\n                row = 'odd';\n            }\n        });\n\n        html += '</ul>' +\n            '</div>'\n\n        $(e).html(html);\n\n        // Apply target to links\n        $('a', e).attr('target', options.linktarget);\n    };\n\n    var _formatFilesize = function(bytes) {\n        var s = ['bytes', 'kb', 'MB', 'GB', 'TB', 'PB'];\n        var e = Math.floor(Math.log(bytes) / Math.log(1024));\n        return (bytes / Math.pow(1024, Math.floor(e))).toFixed(2) + \" \" + s[e];\n    }\n\n    var _formatDate = function(date, mask) {\n\n        // Convert to date and set return to the mask\n        var fmtDate = new Date(date);\n        date = mask;\n\n        // Replace mask tokens\n        date = date.replace('dd', _formatDigit(fmtDate.getDate()));\n        date = date.replace('MMMM', _getMonthName(fmtDate.getMonth()));\n        date = date.replace('MM', _formatDigit(fmtDate.getMonth() + 1));\n        date = date.replace('yyyy', fmtDate.getFullYear());\n        date = date.replace('hh', _formatDigit(fmtDate.getHours()));\n        date = date.replace('mm', _formatDigit(fmtDate.getMinutes()));\n        date = date.replace('ss', _formatDigit(fmtDate.getSeconds()));\n\n        return date;\n    }\n\n    var _formatDigit = function(digit) {\n        digit += '';\n        if (digit.length < 2) digit = '0' + digit;\n        return digit;\n    }\n\n    var _getMonthName = function(month) {\n        var name = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return name[month];\n    }\n\n    var _getXMLDocument = function(string) {\n        var browser = navigator.appName;\n        var xml;\n        if (browser == 'Microsoft Internet Explorer') {\n            xml = new ActiveXObject('Microsoft.XMLDOM');\n            xml.async = 'false';\n            xml.loadXML(string);\n        } else {\n            xml = (new DOMParser()).parseFromString(string, 'text/xml');\n        }\n        return xml;\n    }\n\n    var _getLapsedTime = function(date) {\n\n        // Get current date and format date parameter\n        var todayDate = new Date();\n        var pastDate = new Date(date);\n\n        // Get lasped time in seconds\n        var lapsedTime = Math.round((todayDate.getTime() - pastDate.getTime()) / 1000)\n\n        // Return lasped time in seconds, minutes, hours, days and weeks\n        if (lapsedTime < 60) {\n            return '< 1 min';\n        } else if (lapsedTime < (60 * 60)) {\n            var t = Math.round(lapsedTime / 60) - 1;\n            var u = 'min';\n        } else if (lapsedTime < (24 * 60 * 60)) {\n            var t = Math.round(lapsedTime / 3600) - 1;\n            var u = 'hour';\n        } else if (lapsedTime < (7 * 24 * 60 * 60)) {\n            var t = Math.round(lapsedTime / 86400) - 1;\n            var u = 'day';\n        } else {\n            var t = Math.round(lapsedTime / 604800) - 1;\n            var u = 'week';\n        }\n\n        // Check for plural units\n        if (t > 1) u += 's';\n        return t + ' ' + u;\n    }\n\n})(jQuery);\n\n},{\"./analytics\":3,\"./supports\":6}],2:[function(require,module,exports){\nmodule.exports = function(element, event, fn) {\n  if (element.addEventListener) {\n    element.addEventListener(event, fn, false);\n  }\n  else {\n    element.attachEvent('on' + event, fn);\n  }\n};\n\n},{}],3:[function(require,module,exports){\n/* global ga */\n\nvar linkClicked = require('./link-clicked');\nvar parseUrl = require('./parse-url');\n\n\nvar breakpoints = {\n  xs: '(max-width: 383px)',\n  sm: '(min-width: 384px) and (max-width: 575px)',\n  md: '(min-width: 576px) and (max-width: 767px)',\n  lg: '(min-width: 768px)'\n};\n\n\nfunction trackBreakpoints() {\n  // Do nothing in browsers that don't support `window.matchMedia`.\n  if (!window.matchMedia) return;\n\n  // Prevent rapid breakpoint changes from all firing at once.\n  var timeout;\n\n  Object.keys(breakpoints).forEach(function(breakpoint) {\n    var mql = window.matchMedia(breakpoints[breakpoint]);\n\n    // Set the initial breakpoint on pageload.\n    if (mql.matches) {\n      ga('set', 'dimension1', breakpoint);\n    }\n\n    // Update the breakpoint as the matched media changes, and send an event.\n    mql.addListener(function(mql) {\n      if (mql.matches) {\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n          ga('set', 'dimension1', breakpoint);\n          ga('send', 'event', 'Breakpoint', 'change', breakpoint);\n        }, 1000);\n      }\n    });\n  });\n}\n\n\nfunction trackOutboundLinks() {\n  linkClicked(function() {\n\n    // Ignore outbound links on social buttons.\n    if (this.getAttribute('data-social-network')) return;\n\n    if (isLinkOutbound(this)) {\n      // Opening links in an external tabs allows the ga beacon to send.\n      // When following links directly, sometimes they don't make it.\n      this.target = '_blank';\n\n      ga('send', 'event', 'Outbound Link', 'click', this.href);\n    }\n  });\n}\n\n\nfunction trackSocialInteractions() {\n  linkClicked(function() {\n    var socialNetwork = this.getAttribute('data-social-network');\n    if (socialNetwork) {\n      var socialAction = this.getAttribute('data-social-action');\n      var socialTarget = location.href;\n\n      // Opening links in an external tab allows the ga beacon to send.\n      // When following links directly, sometimes they don't make it.\n      this.target = '_blank';\n\n      ga('send', 'social', socialNetwork, socialAction, socialTarget);\n    }\n  });\n}\n\n\nfunction isLinkOutbound(link) {\n  var url = parseUrl(link.href);\n  var loc = parseUrl(location.href);\n  return url.origin != loc.origin;\n}\n\n\nmodule.exports = {\n  track: function() {\n\n    trackBreakpoints();\n    trackOutboundLinks();\n    trackSocialInteractions();\n\n    ga('send', 'pageview');\n  }\n};\n\n},{\"./link-clicked\":4,\"./parse-url\":5}],4:[function(require,module,exports){\nvar addListener = require('./add-listener');\n\nfunction isLink(el) {\n  return el.nodeName && el.nodeName.toLowerCase() == 'a' && el.href;\n}\n\nfunction getLinkAncestor(el) {\n  if (isLink(el)) return el;\n  while (el.parentNode && el.parentNode.nodeType == 1) {\n    if (isLink(el)) return el;\n    el = el.parentNode;\n  }\n}\n\nmodule.exports = function(fn) {\n  addListener(document, 'click', function(event) {\n    var e = event || window.event;\n    var target = e.target || e.srcElement;\n    var link = getLinkAncestor(target);\n    if (link) {\n      fn.call(link, e);\n    }\n  });\n};\n\n},{\"./add-listener\":2}],5:[function(require,module,exports){\nvar a = document.createElement('a');\nvar cache = {};\n\n/**\n * Parse the given url and return the properties returned\n * by the `Location` object.\n * @param {string} url - The url to parse.\n * @return {Object} An object with the same keys as `window.location`.\n */\nmodule.exports = function(url) {\n\n  if (cache[url]) return cache[url];\n\n  var httpPort = /:80$/;\n  var httpsPort = /:443/;\n\n  a.href = url;\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == '80' || a.port == '443') ? '' : a.port;\n\n  // Sometimes IE incorrectly includes a port (e.g. `:80` or `:443`)  even\n  // when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(protocol == 'http:' ? httpPort : httpsPort, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    path: pathname + a.search,\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search\n  };\n};\n\n},{}],6:[function(require,module,exports){\nvar supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n\n},{}]},{},[1])\n\n\n//# sourceMappingURL=main.js.map","module.exports = function(element, event, fn) {\n  if (element.addEventListener) {\n    element.addEventListener(event, fn, false);\n  }\n  else {\n    element.attachEvent('on' + event, fn);\n  }\n};\n","/* global ga */\n\nvar linkClicked = require('./link-clicked');\nvar parseUrl = require('./parse-url');\n\n\nvar breakpoints = {\n  xs: '(max-width: 383px)',\n  sm: '(min-width: 384px) and (max-width: 575px)',\n  md: '(min-width: 576px) and (max-width: 767px)',\n  lg: '(min-width: 768px)'\n};\n\n\nfunction trackBreakpoints() {\n  // Do nothing in browsers that don't support `window.matchMedia`.\n  if (!window.matchMedia) return;\n\n  // Prevent rapid breakpoint changes from all firing at once.\n  var timeout;\n\n  Object.keys(breakpoints).forEach(function(breakpoint) {\n    var mql = window.matchMedia(breakpoints[breakpoint]);\n\n    // Set the initial breakpoint on pageload.\n    if (mql.matches) {\n      ga('set', 'dimension1', breakpoint);\n    }\n\n    // Update the breakpoint as the matched media changes, and send an event.\n    mql.addListener(function(mql) {\n      if (mql.matches) {\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n          ga('set', 'dimension1', breakpoint);\n          ga('send', 'event', 'Breakpoint', 'change', breakpoint);\n        }, 1000);\n      }\n    });\n  });\n}\n\n\nfunction trackOutboundLinks() {\n  linkClicked(function() {\n\n    // Ignore outbound links on social buttons.\n    if (this.getAttribute('data-social-network')) return;\n\n    if (isLinkOutbound(this)) {\n      // Opening links in an external tabs allows the ga beacon to send.\n      // When following links directly, sometimes they don't make it.\n      this.target = '_blank';\n\n      ga('send', 'event', 'Outbound Link', 'click', this.href);\n    }\n  });\n}\n\n\nfunction trackSocialInteractions() {\n  linkClicked(function() {\n    var socialNetwork = this.getAttribute('data-social-network');\n    if (socialNetwork) {\n      var socialAction = this.getAttribute('data-social-action');\n      var socialTarget = location.href;\n\n      // Opening links in an external tab allows the ga beacon to send.\n      // When following links directly, sometimes they don't make it.\n      this.target = '_blank';\n\n      ga('send', 'social', socialNetwork, socialAction, socialTarget);\n    }\n  });\n}\n\n\nfunction isLinkOutbound(link) {\n  var url = parseUrl(link.href);\n  var loc = parseUrl(location.href);\n  return url.origin != loc.origin;\n}\n\n\nmodule.exports = {\n  track: function() {\n\n    trackBreakpoints();\n    trackOutboundLinks();\n    trackSocialInteractions();\n\n    ga('send', 'pageview');\n  }\n};\n","var addListener = require('./add-listener');\n\nfunction isLink(el) {\n  return el.nodeName && el.nodeName.toLowerCase() == 'a' && el.href;\n}\n\nfunction getLinkAncestor(el) {\n  if (isLink(el)) return el;\n  while (el.parentNode && el.parentNode.nodeType == 1) {\n    if (isLink(el)) return el;\n    el = el.parentNode;\n  }\n}\n\nmodule.exports = function(fn) {\n  addListener(document, 'click', function(event) {\n    var e = event || window.event;\n    var target = e.target || e.srcElement;\n    var link = getLinkAncestor(target);\n    if (link) {\n      fn.call(link, e);\n    }\n  });\n};\n","var a = document.createElement('a');\nvar cache = {};\n\n/**\n * Parse the given url and return the properties returned\n * by the `Location` object.\n * @param {string} url - The url to parse.\n * @return {Object} An object with the same keys as `window.location`.\n */\nmodule.exports = function(url) {\n\n  if (cache[url]) return cache[url];\n\n  var httpPort = /:80$/;\n  var httpsPort = /:443/;\n\n  a.href = url;\n\n  // Sometimes IE will return no port or just a colon, especially for things\n  // like relative port URLs (e.g. \"//google.com\").\n  var protocol = !a.protocol || ':' == a.protocol ?\n      location.protocol : a.protocol;\n\n  // Don't include default ports.\n  var port = (a.port == '80' || a.port == '443') ? '' : a.port;\n\n  // Sometimes IE incorrectly includes a port (e.g. `:80` or `:443`)  even\n  // when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(protocol == 'http:' ? httpPort : httpsPort, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    path: pathname + a.search,\n    pathname: pathname,\n    port: port,\n    protocol: protocol,\n    search: a.search\n  };\n};\n","var supports = {};\nvar style = document.body.style;\n\nmodule.exports = {\n  flexbox: function() {\n    return supports.flexbox || (supports.flexbox = ('flexBasis' in style ||\n        'msFlexAlign' in style || 'webkitBoxDirection' in style));\n  }\n};\n"]}